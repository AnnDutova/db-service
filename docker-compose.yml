version: "3.8"
services:
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  postgres-auth:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=pgpwd
      - POSTGRES_USER=pguser
      - POSTGRES_DB=testdb
    ports:
      - "5432:5432"
    volumes:
      - "pgdata_auth:/var/lib/postgresql/data"
      # - ./init:/docker-entrypoint-initdb.d/
    command: [ "postgres", "-c", "log_statement=all" ]
  redis-jwt:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
  auth:
    build:
      context: ./auth-service
      target: builder
    image: auth
    env_file: auth-service/config/.env.dev
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`malcorp.test`) && PathPrefix(`/api/auth`)"
    environment:
      - ENV=dev
    volumes:
      - ./auth-service:/go/src/app
    depends_on:
      - postgres-auth
      - redis-jwt
    command: reflex -r "\.go$$" -s -- sh -c "go run ./cmd/main.go"
volumes:
  pgdata_auth:
  redisdata: